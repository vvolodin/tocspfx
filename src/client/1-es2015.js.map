{"version":3,"sources":["./src/app/create/components/create-chart.component.html","./src/app/create/components/create-chart.component.ts","./src/app/create/components/sql-source.component.html","./src/app/create/components/sql-source.component.ts","./src/app/create/create-chart.service.ts","./src/app/create/create-routing.module.ts","./src/app/create/create.actions.ts","./src/app/create/create.effects.ts","./src/app/create/create.models.ts","./src/app/create/create.module.ts","./src/app/create/create.reducers.ts"],"names":[],"mappings":"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","file":"1-es2015.js","sourcesContent":["<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <section>\r\n                <div class=\"card\">\r\n                    <div class=\"section-heading\">\r\n                        {{Resources.CreateChartStrings.TXT.Title2|translate:locale.language}}\r\n                    </div>\r\n                    <div class=\"suffix\">{{Resources.CreateChartStrings.TXT.TitleDesc|translate:locale.language}}</div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>{{Resources.CreateChartStrings.TXT.ChartName|translate:locale.language}}</label>\r\n                                <input class=\"form-control\" type=\"text\" autocomplete=\"off\"\r\n                                    [disabled]=\"isCreating$|async\" [(ngModel)]=\"createChartModel.name\"\r\n                                    [placeholder]=\"createChartModel.placeholder\" />\r\n                            </div>\r\n                            <div class=\"form-group form-check\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" [disabled]=\"isCreating$|async\"\r\n                                    [checked]=\"createChartModel.isPublic\" id=\"ispublic-checkbox\" />\r\n                                <label class=\"form-check-label\" for=\"ispublic-checkbox\"><span class=\"font-weight-bold\">{{Resources.CreateChartStrings.TXT.Published|translate:locale.language}}</span>\r\n                                    - {{Resources.CreateChartStrings.TXT.PublishedDesc|translate:locale.language}}</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card\">\r\n                    <div class=\"section-heading\">\r\n                        {{Resources.CreateChartStrings.TXT.ChooseSource|translate:locale.language}}\r\n                    </div>\r\n                    <div class=\"suffix\">{{Resources.CreateChartStrings.TXT.ChooseDesc|translate:locale.language}}</div>\r\n                    <div class=\"dataSources\">\r\n                        <div *ngFor=\"let source of dataSources; index as i\"\r\n                            class=\"card p-3 flex-row align-items-center data-source\" [class.disabled]=\"!source.isEnabled\"\r\n                            [class.active]=\"source.isEnabled\" [class.inactive]=\"dataSourcesHighlight[i]\"\r\n                            (mouseenter)=\"onMouseEnter($event, i)\" (mouseleave)=\"onMouseLeave()\">\r\n                            <div class=\"featured-content d-flex flex-grow-1 flex-wrap flex-md-nowrap\">\r\n                                <div class=\"avatar-container fixed-width\">\r\n                                    <div class=\"avatar large\">\r\n                                        <img [src]=\"source.imageUrl\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"content-container flex-grow-1 align-items-center\">\r\n                                    <div class=\"\">\r\n                                        <div class=\"t-style-three title\">{{source.title|translate:locale.language}}<span\r\n                                                *ngIf=\"!source.isEnabled\">\r\n                                                {{Resources.CreateChartStrings.TXT.NotEnabled|translate:locale.language}}</span>\r\n                                        </div>\r\n                                        <div *ngIf=\"!source.warning && !source.isSharePointWarning\"\r\n                                            class=\"t-style-four suffix\">\r\n                                            {{source.desc|translate:locale.language}}</div>\r\n                                        <div *ngIf=\"source.warning\" class=\"t-style-four suffix errorText\">\r\n                                            <a class=\"text-info\" [href]=\"source.warningLink\"><i\r\n                                                    class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\r\n                                                {{source.warning|translate:locale.language}}</a>\r\n                                        </div>\r\n                                        <div *ngIf=\"source.isSharePointWarning\"\r\n                                            class=\"t-style-four suffix errorLink text-info\">\r\n                                            <a *ngIf=\"preloadedData?.sharePointRedirectLink\"\r\n                                                [href]=\"preloadedData?.sharePointRedirectLink\" class=\"text-info\"><i\r\n                                                    class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\r\n                                                {{Resources.CreateChartStrings.SPWarning|translate:locale.language}}</a>\r\n                                            <span *ngIf=\"!preloadedData?.sharePointRedirectLink\" class=\"text-info\">\r\n                                                <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\r\n                                                {{Resources.CreateChartStrings.SPWarning|translate:locale.language}}\r\n                                            </span>\r\n                                        </div>\r\n                                        <p *ngIf=\"source.errorLink\">\r\n                                            <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\r\n                                            <a [href]=\"source.errorLink\" target=\"_blank\">\r\n                                                {{Resources.CreateChartStrings.TXT.WhyAmISeeing|translate:locale.language}}\r\n                                            </a>\r\n                                        </p>\r\n                                        <p *ngIf=\"source.guideLink\">\r\n                                            <i class=\"fa fa-paperclip\" aria-hidden=\"true\"></i>\r\n                                            <a [href]=\"source.guideLink\" target=\"_blank\">\r\n                                                {{source.guideLinkText|translate:locale.language}}\r\n                                            </a>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"icon-container d-flex align-items-center flex-grow-1 flex-md-grow-0\">\r\n                                    <button class=\"btn btn-sm dSource flex-grow-1 flex-md-grow-0\" [class.btn-success]=\"source.isEnabled\"\r\n                                        [class.btn-default]=\"!source.isEnabled\"\r\n                                        [disabled]=\"!source.isEnabled || (isCreating$|async)\"\r\n                                        (click)=\"createChart(source.type)\">{{Resources.CreateChartStrings.BTN.ChooseThisSource|translate:locale.language}}\r\n                                        »</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy, Inject } from '@angular/core';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { Subject, combineLatest, Observable } from 'rxjs';\r\nimport * as fromRoot from '../../reducers';\r\nimport * as fromCreate from '../create.reducers';\r\nimport * as Resources from '../../strings';\r\nimport { DataSourceDescription, demoSource, manualSource, azureTableSource, excelSource, sqlSource, upsSourceDisabled, upsSource, spListSourceDisabled, spListSource, waadSource, waadSourceDisabled } from '../create.models';\r\nimport { PreloadedData } from 'src/app/models';\r\nimport { takeUntil, filter } from 'rxjs/operators';\r\nimport { CreateChart, ResetSaveStatus } from '../create.actions';\r\nimport { Router } from '@angular/router';\r\nimport { ToastError } from 'src/app/shared/shared.actions';\r\nimport { ChartDescription } from 'src/app/shared/shared.models';\r\nimport { InsertChartDescription } from 'src/app/actions';\r\nimport { AnalyticsService } from 'src/app/core/services/analytics.service';\r\nimport { L10nTranslationService, L10N_LOCALE, L10nLocale } from 'angular-l10n';\r\n\r\n@Component({\r\n    selector: 'toc-create-chart',\r\n    templateUrl: './create-chart.component.html',\r\n    styleUrls: ['./create-chart.component.scss']\r\n})\r\nexport class CreateChartComponent implements OnInit, OnDestroy {\r\n    Resources = Resources;\r\n    dataSources: DataSourceDescription[] = [];\r\n    dataSourcesHighlight: boolean[] = [];\r\n    preloadedData: PreloadedData;\r\n    createChartModel = {\r\n        placeholder: '',\r\n        isPublic: true,\r\n        name: ''\r\n    };\r\n    placeholderName = 'Chart #{0}';\r\n    isCreating$: Observable<boolean>;\r\n    private unsubscribe: Subject<void> = new Subject();\r\n\r\n    constructor(@Inject(L10N_LOCALE) public locale: L10nLocale, private store: Store<fromRoot.State>, private translation: L10nTranslationService, private router: Router, private analytics: AnalyticsService) {\r\n        this.analytics.send('Create chart', {});\r\n        combineLatest([this.translation.onChange(), this.store.select(fromRoot.getPreloadedData)])\r\n            .pipe(takeUntil(this.unsubscribe))\r\n            .subscribe(([_, data]) => {\r\n                this.placeholderName = this.translation.translate(Resources.CreateChartStrings.TXT.ChartNamePlaceholder);\r\n                this.preloadedData = data;\r\n                const sources: DataSourceDescription[] = [sqlSource, excelSource, manualSource, azureTableSource, demoSource];\r\n                if (this.preloadedData.isSharePointOnline) {\r\n                    sources.unshift(spListSource);\r\n                    sources.unshift(upsSource);\r\n                } else {\r\n                    sources.unshift(spListSourceDisabled);\r\n                    sources.unshift(upsSourceDisabled);\r\n                }\r\n                if (this.preloadedData.isWAADTenant) {\r\n                    sources.unshift(waadSource);\r\n                } else {\r\n                    sources.unshift(waadSourceDisabled);\r\n                }\r\n                this.dataSources = sources;\r\n                this.dataSourcesHighlight = this.dataSources.map(x => false);\r\n\r\n                for (let i = 1; i < 256; i++) {\r\n                    const placeholderName = this.placeholderName.replace('{0}', String(i));\r\n                    if (this.preloadedData.fullChartList.findIndex(chart => chart.name === placeholderName) === -1) {\r\n                        this.createChartModel = {\r\n                            ...this.createChartModel,\r\n                            placeholder: placeholderName\r\n                        };\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        this.store.pipe(takeUntil(this.unsubscribe), select(fromCreate.selectCreatedChart), filter(x => x !== null)).subscribe(chart => {\r\n            //proceed further based on chart type\r\n            this.store.dispatch(new InsertChartDescription(chart));\r\n            switch (chart.dataSourceType) {\r\n                case 13: { //JSON\r\n                    this.router.navigateByUrl(`/chart/${chart.id}?EditMode=1`);\r\n                    break;\r\n                }\r\n                case 2: { //SQL\r\n                    this.router.navigate(['/create/sql', chart.id]);\r\n                    break;\r\n                }\r\n                case 5: { //WAAD\r\n                    window.location.href = `/PickTop/${chart.id}?create=create`;\r\n                    break;\r\n                }\r\n                case 6: { //SP List\r\n                    window.location.href = `/sharepointlist/${chart.id}`;\r\n                    break;\r\n                }\r\n                case 7: { //UPS\r\n                    window.location.href = `/PickTop/${chart.id}?create=create`;\r\n                    break;\r\n                }\r\n                case 8: { //Demo\r\n                    this.router.navigate(['/chart', chart.id]);\r\n                    break;\r\n                }\r\n                case 12: { //Azure Table\r\n                    window.location.href = `/CreateChart/AzureTable?OrgChartDefinitionId=${chart.id}`;\r\n                    break;\r\n                }\r\n                default: {\r\n                    this.store.dispatch(new ToastError('Unknown data source type'));\r\n                }\r\n            }\r\n            this.store.dispatch(ResetSaveStatus());\r\n        });\r\n        this.isCreating$ = store.pipe(select(fromCreate.selectIsCreating));\r\n    }\r\n\r\n    ngOnInit() {\r\n        console.log('on init');\r\n        this.store.dispatch(ResetSaveStatus());\r\n    }\r\n\r\n    createChart(type: number) {\r\n        this.store.dispatch(CreateChart({\r\n            model: {\r\n                ChartName: this.createChartModel.name || this.createChartModel.placeholder,\r\n                IsPublic: this.createChartModel.isPublic,\r\n                DataSourceType: type\r\n            }\r\n        }));\r\n    }\r\n\r\n    onMouseEnter($event: any, index: number) {\r\n        this.dataSourcesHighlight = this.dataSources.map((value, idx) => idx !== index);\r\n    }\r\n\r\n    onMouseLeave() {\r\n        this.dataSourcesHighlight = this.dataSources.map(x => false);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n}\r\n","<div class=\"container\">\r\n    <form name=\"sqlForm\" (ngSubmit)=\"f.form.valid && save()\" #f=\"ngForm\" novalidate [class.submitted]=\"f.submitted\">\r\n        <div class=\"card\">\r\n            <div class=\"section-heading\">{{Resources.CreateChartStrings.SQL.Title2|translate:locale.language}}</div>\r\n            <div class=\"suffix\">{{Resources.CreateChartStrings.SQL.TitleDesc|translate:locale.language}}</div>\r\n            <div class=\"row horizontal-form\">\r\n                <div class=\"col-3\"><label>{{Resources.Strings.TXT.ConnectionString|translate:locale.language}}</label></div>\r\n                <div class=\"col-9\">\r\n                    <input type=\"text\" class=\"form-control\" required [(ngModel)]=\"model.ConnectionString\" name=\"connectionString\">\r\n                </div>\r\n            </div>\r\n            <div class=\"row horizontal-form\">\r\n                <div class=\"col-3\"><label>{{Resources.Strings.TXT.SELECTquery|translate:locale.language}}</label></div>\r\n                <div class=\"col-9\">\r\n                    <input type=\"text\" class=\"form-control\" required [(ngModel)]=\"model.SelectQuery\" name=\"selectQuery\">\r\n                </div>\r\n            </div>\r\n            <div class=\"row horizontal-form\">\r\n                <div class=\"col-3\"><label>{{Resources.Strings.TXT.PrimaryKeyColumn|translate:locale.language}}</label></div>\r\n                <div class=\"col-9\">\r\n                    <input type=\"text\" class=\"form-control\" required [(ngModel)]=\"model.PrimaryKeyColumn\" name=\"primaryKey\">\r\n                </div>\r\n            </div>\r\n            <div class=\"row horizontal-form\">\r\n                <div class=\"col-3\"><label>{{Resources.Strings.TXT.ParentColumn|translate:locale.language}}</label></div>\r\n                <div class=\"col-9\">\r\n                    <input type=\"text\" class=\"form-control\" required [(ngModel)]=\"model.ParentColumn\" name=\"parentKey\">\r\n                </div>\r\n            </div>\r\n            <div class=\"row horizontal-form\">\r\n                <div class=\"col-3\"><label>{{Resources.Strings.TXT.SearchQuery|translate:locale.language}}</label></div>\r\n                <div class=\"col-9\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"model.SearchQuery\" name=\"searchQuery\">\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group hidden alert alert-danger\" *ngIf=\"connectionFail\"></div>\r\n            <div class=\"form-group hidden alert alert-success\" *ngIf=\"connectionSuccess\">\r\n                {{Resources.CreateChartStrings.SQL.ConnectionSuccess|translate:locale.language}}\r\n            </div>\r\n            <div class=\"row pull-right\">\r\n                <div class=\"col-12\">\r\n                    <button type=\"submit\" class=\"btn\"\r\n                        [ngClass]=\"{'btn-info': !(hasConnectionTestFailed$|async) && !(hasConnectionTestSucceeded$|async), 'btn-danger': (hasConnectionTestFailed$|async), 'btn-success': (hasConnectionTestSucceeded$|async), 'disabled': (isTestingConnection$|async) }\"\r\n                        (click)=\"testConnection()\">{{Resources.CreateChartStrings.SQL.TestConnection|translate:locale.language}}</button>\r\n                    <button type=\"submit\"\r\n                        class=\"btn btn-success\">{{Resources.Strings.BUTTON.SAVE|translate:locale.language}}</button>\r\n                </div>\r\n            </div>\r\n            <div class=\"clearfix\"></div>\r\n        </div>\r\n    </form>\r\n</div>\r\n","import { Component, OnInit, OnDestroy, Inject } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { L10N_LOCALE, L10nLocale } from 'angular-l10n';\r\nimport * as fromRoot from '../../reducers';\r\nimport * as Resources from '../../strings';\r\nimport * as fromCreate from '../create.reducers';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { takeUntil, filter, withLatestFrom } from 'rxjs/operators';\r\nimport { LoadDataSource, TestSqlConnection, SaveSqlDataSource, ResetSaveStatus } from '../create.actions';\r\nimport { ExternalSqlSourceViewModel } from '../create.models';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'toc-sql-source',\r\n    templateUrl: './sql-source.component.html',\r\n    styleUrls: ['./sql-source.component.scss']\r\n})\r\nexport class SqlSourceComponent implements OnInit, OnDestroy {\r\n    Resources = Resources;\r\n    chartId$: Observable<string>;\r\n    chartId: string;\r\n    dataSource$: Observable<ExternalSqlSourceViewModel>;\r\n    hasConnectionTestSucceeded$: Observable<boolean>;\r\n    hasConnectionTestFailed$: Observable<boolean>;\r\n    isTestingConnection$: Observable<boolean>;\r\n    model: ExternalSqlSourceViewModel = {\r\n        ConnectionString: '',\r\n        ParentColumn: '',\r\n        PrimaryKeyColumn: '',\r\n        SearchQuery: '',\r\n        SelectQuery: ''\r\n    };\r\n    connectionFail = false;\r\n    connectionSuccess = false;\r\n    private unsubscribe: Subject<void> = new Subject();\r\n\r\n    constructor(@Inject(L10N_LOCALE) public locale: L10nLocale, private store: Store<fromRoot.State>, private router: Router) {\r\n        this.chartId$ = this.store.pipe(select(fromRoot.getChartId));\r\n        this.chartId$.pipe(takeUntil(this.unsubscribe), filter(x => x !== '')).subscribe(x => {\r\n            store.dispatch(LoadDataSource({ chartId: x }));\r\n            this.chartId = x;\r\n        });\r\n        this.dataSource$ = this.store.pipe(select(fromCreate.selectDataSource));\r\n        this.dataSource$.pipe(takeUntil(this.unsubscribe)).subscribe(x => {\r\n            this.model = { ...x };\r\n        });\r\n        this.hasConnectionTestFailed$ = this.store.pipe(select(fromCreate.selectHasConnectionTestFailed));\r\n        this.hasConnectionTestSucceeded$ = this.store.pipe(select(fromCreate.selectHasConnectionTestSucceeded));\r\n        this.store.pipe(\r\n            select(fromCreate.selectSaveSqlSourceSuccess),\r\n            takeUntil(this.unsubscribe),\r\n            filter(x => x),\r\n            withLatestFrom(this.chartId$)\r\n        ).subscribe(([_, chartId]) => {\r\n            this.router.navigate(['/chart', chartId]);\r\n            this.store.dispatch(ResetSaveStatus());\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    testConnection() {\r\n        this.store.dispatch(TestSqlConnection({ dataSource: this.model }));\r\n    }\r\n\r\n    save() {\r\n        this.store.dispatch(SaveSqlDataSource({ chartId: this.chartId, dataSource: this.model }));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ExternalSqlSourceViewModel, CreateChartViewModel } from './create.models';\r\nimport { ChartDescription } from '../shared/shared.models';\r\n\r\n@Injectable()\r\nexport class CreateChartService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    createChart(model: CreateChartViewModel) {\r\n        return this.http.post<ChartDescription>('/api/create/chart', model);\r\n    }\r\n\r\n    getDataSource(chartId: string) {\r\n        return this.http.get<any>(`/api/create/sql/${chartId}`);\r\n    }\r\n\r\n    saveSqlDataSource(chartId: string, model: ExternalSqlSourceViewModel) {\r\n        return this.http.post<ExternalSqlSourceViewModel>(`/api/create/sql/${chartId}`, model);\r\n    }\r\n\r\n    testSqlConnection(dataSource: ExternalSqlSourceViewModel) {\r\n        return this.http.post<string>('/api/testconnection', dataSource);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CreateChartComponent } from './components/create-chart.component';\r\nimport { SqlSourceComponent } from './components/sql-source.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: CreateChartComponent },\r\n    { path: 'sql/:chartId', component: SqlSourceComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class CreateRoutingModule { }\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { ExternalSqlSourceViewModel, CreateChartViewModel } from './create.models';\r\nimport { ChartDescription } from '../shared/shared.models';\r\n\r\nexport const LoadDataSource = createAction(\r\n    '[Create] Load data source',\r\n    props<{ chartId: string }>()\r\n);\r\n\r\nexport const LoadDataSourceSuccess = createAction(\r\n    '[Create] Load data source success',\r\n    props<{ dataSource: any }>()\r\n);\r\n\r\nexport const LoadDataSourceFailure = createAction(\r\n    '[Create] Load data source failure'\r\n);\r\n\r\nexport const SaveSqlDataSource = createAction(\r\n    '[Create] Save SQL data source',\r\n    props<{ chartId: string, dataSource: ExternalSqlSourceViewModel }>()\r\n);\r\n\r\nexport const SaveSqlDataSourceSuccess = createAction(\r\n    '[Create] Save SQL data source success',\r\n    props<{ dataSource: ExternalSqlSourceViewModel }>()\r\n);\r\n\r\nexport const SaveSqlDataSourceFailure = createAction(\r\n    '[Create] Save SQL data source failure'\r\n);\r\n\r\nexport const TestSqlConnection = createAction(\r\n    '[Create] Test sql connection',\r\n    props<{ dataSource: ExternalSqlSourceViewModel }>()\r\n);\r\n\r\nexport const TestSqlConnectionSuccess = createAction(\r\n    '[Create] Test sql connection success'\r\n);\r\n\r\nexport const TestSqlConnectionFailure = createAction(\r\n    '[Create] Test sql connection failure'\r\n);\r\n\r\nexport const ResetSaveStatus = createAction(\r\n    '[Create] Reset save status'\r\n);\r\n\r\nexport const CreateChart = createAction(\r\n    '[Create] Create chart',\r\n    props<{ model: CreateChartViewModel }>()\r\n);\r\n\r\nexport const CreateChartSuccess = createAction(\r\n    '[Create] Create chart success',\r\n    props<ChartDescription>()\r\n);\r\n\r\nexport const CreateChartFailure = createAction(\r\n    '[Create] Create chart failure'\r\n);\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect, ofType, createEffect } from '@ngrx/effects';\r\nimport { EMPTY, of } from 'rxjs';\r\nimport { map, mergeMap, catchError, exhaustMap, switchMap } from 'rxjs/operators';\r\nimport { CreateChartService } from './create-chart.service';\r\nimport { LoadDataSource, LoadDataSourceSuccess, LoadDataSourceFailure, TestSqlConnection, TestSqlConnectionSuccess, TestSqlConnectionFailure, SaveSqlDataSource, SaveSqlDataSourceSuccess, SaveSqlDataSourceFailure, CreateChart, CreateChartSuccess, CreateChartFailure } from './create.actions';\r\nimport { ToastSuccess, ToastError } from '../shared/shared.actions';\r\n\r\n@Injectable()\r\nexport class CreateEffects {\r\n    constructor(private actions$: Actions, private createChartService: CreateChartService) {}\r\n\r\n    createChart$ = createEffect(() => this.actions$.pipe(\r\n        ofType(CreateChart),\r\n        switchMap(action => this.createChartService.createChart(action.model).pipe(map(data => CreateChartSuccess(data)))),\r\n        catchError(error => of(CreateChartFailure()))\r\n    ));\r\n\r\n    loadDataSource$ = createEffect(() => this.actions$.pipe(\r\n        ofType(LoadDataSource),\r\n        switchMap(action => this.createChartService.getDataSource(action.chartId).pipe(map(data => LoadDataSourceSuccess({ dataSource: data })))),\r\n        catchError(error => of(LoadDataSourceFailure()))\r\n    ));\r\n\r\n    saveSqlDataSource$ = createEffect(() => this.actions$.pipe(\r\n        ofType(SaveSqlDataSource),\r\n        switchMap(action => this.createChartService.saveSqlDataSource(action.chartId, action.dataSource).pipe(mergeMap(data =>\r\n            [SaveSqlDataSourceSuccess({ dataSource: data }), new ToastSuccess('Data source saved.')]\r\n        ))),\r\n        catchError(error => of(SaveSqlDataSourceFailure()).pipe(mergeMap(x => [x, new ToastError('Could not save data source.')])))\r\n    ));\r\n\r\n    testSqlConnnection$ = createEffect(() => this.actions$.pipe(\r\n        ofType(TestSqlConnection),\r\n        switchMap(action => this.createChartService.testSqlConnection(action.dataSource).pipe(mergeMap(data => {\r\n            if (data === 'OK') {\r\n                return [TestSqlConnectionSuccess(), new ToastSuccess('Connection test succeeded.')];\r\n            } else {\r\n                return [TestSqlConnectionFailure(), new ToastError('Connection test failed.')];\r\n            }\r\n        }))),\r\n        catchError(error => of(TestSqlConnectionFailure()).pipe(mergeMap(x => [x, new ToastError('Connection test failed on the server.')])))\r\n    ));\r\n}\r\n","export interface DataSourceDescription {\r\n    isEnabled: boolean;\r\n    imageUrl: string;\r\n    title: string;\r\n    desc: string;\r\n    warning?: string;\r\n    warningLink?: string;\r\n    isSharePointWarning?: boolean;\r\n    errorLink?: string;\r\n    errorText?: string;\r\n    guideLink?: string;\r\n    guideLinkText?: string;\r\n    type: number;\r\n}\r\n\r\nexport const waadSourceDisabled: DataSourceDescription = {\r\n    title: 'CreateChartStrings.TXT.SourceTitleAD',\r\n    desc: 'CreateChartStrings.TXT.SourceDescAD',\r\n    imageUrl: '/Images/ux/dataSources/WAAD.png',\r\n    warning: 'CreateChartStrings.ADWarning',\r\n    warningLink: '/Tenant/SimpleConsent',\r\n    errorLink: '/website/guides/aad-offline-error.cshtml',\r\n    isEnabled: false,\r\n    type: 5\r\n};\r\nexport const waadSource: DataSourceDescription = {\r\n    title: 'CreateChartStrings.TXT.SourceTitleAD',\r\n    desc: 'CreateChartStrings.TXT.SourceDescAD',\r\n    imageUrl: '/Images/ux/dataSources/WAAD.png',\r\n    guideLink: '/website/guides/creating-from-aad.cshtml',\r\n    guideLinkText: 'View our Getting Started guide for Azure Active Directory',\r\n    isEnabled: true,\r\n    type: 5\r\n};\r\nexport const upsSourceDisabled: DataSourceDescription = {\r\n    title: 'CreateChartStrings.TXT.SourceTitleUPS',\r\n    desc: 'CreateChartStrings.TXT.SourceDescUPS',\r\n    imageUrl: '/Images/ux/dataSources/SharePointUPS.png',\r\n    isSharePointWarning: true,\r\n    errorLink: '/website/guides/sharepoint-offline-error.cshtml',\r\n    errorText: 'Why am I seeing this error message and how do I resolve it?',\r\n    isEnabled: false,\r\n    type: 7\r\n};\r\nexport const upsSource: DataSourceDescription = {\r\n    title: 'CreateChartStrings.TXT.SourceTitleUPS',\r\n    desc: 'CreateChartStrings.TXT.SourceDescUPS',\r\n    imageUrl: '/Images/ux/dataSources/SharePointUPS.png',\r\n    guideLink: '/website/guides/creating-from-ups.cshtml',\r\n    guideLinkText: 'View our Getting Started guide for SharePoint User Profile Service',\r\n    isEnabled: true,\r\n    type: 7\r\n};\r\nexport const spListSourceDisabled: DataSourceDescription = {\r\n    title: 'CreateChartStrings.TXT.SourceTitleSPList',\r\n    desc: 'CreateChartStrings.TXT.SourceDescSPList',\r\n    imageUrl: '/Images/ux/dataSources/SharePointList.png',\r\n    isSharePointWarning: true,\r\n    errorLink: '/website/guides/sharepoint-offline-error.cshtml',\r\n    errorText: 'Why am I seeing this error message and how do I resolve it?',\r\n    isEnabled: false,\r\n    type: 6\r\n};\r\nexport const spListSource: DataSourceDescription = {\r\n    title: 'CreateChartStrings.TXT.SourceTitleSPList',\r\n    desc: 'CreateChartStrings.TXT.SourceDescSPList',\r\n    imageUrl: '/Images/ux/dataSources/SharePointList.png',\r\n    guideLink: '/website/guides/creating-from-sharepoint-list.cshtml',\r\n    guideLinkText: 'View our Getting Started guide for SharePoint List',\r\n    isEnabled: true,\r\n    type: 6\r\n};\r\nexport const sqlSource: DataSourceDescription = {\r\n    title: 'CreateChartStrings.TXT.SourceTitleSQL',\r\n    desc: 'CreateChartStrings.TXT.SourceDescSQL',\r\n    imageUrl: '/Images/ux/dataSources/SQLServer.png',\r\n    guideLink: '/website/guides/creating-from-database.cshtml',\r\n    guideLinkText: 'View our Getting Started guide for the SQL server data source',\r\n    isEnabled: true,\r\n    type: 2\r\n};\r\nexport const excelSource: DataSourceDescription = {\r\n    title: 'CreateChartStrings.TXT.SourceTitleExcel',\r\n    desc: 'CreateChartStrings.TXT.SourceDescExcel',\r\n    imageUrl: '/Images/ux/dataSources/Excel.png',\r\n    isEnabled: true,\r\n    type: 13\r\n};\r\nexport const manualSource: DataSourceDescription = {\r\n    title: 'CreateChartStrings.TXT.SourceTitleManual',\r\n    desc: 'CreateChartStrings.TXT.SourceDescManual',\r\n    imageUrl: '/Images/ux/dataSources/manualChart.png',\r\n    guideLink: '/website/guides/manually-drawing-an-orgchart.cshtml',\r\n    guideLinkText: 'View our Getting Started guide for the Manual data source',\r\n    isEnabled: true,\r\n    type: 13\r\n};\r\nexport const azureTableSource: DataSourceDescription = {\r\n    title: 'Azure Table',\r\n    desc: 'Create chart from Azure Table Storage',\r\n    imageUrl: '/Images/ux/dataSources/AzureTable.png',\r\n    guideLink: '/website/guides/creating-an-orgchart-from-azuretable.cshtml',\r\n    guideLinkText: 'View our guide for the Azure Table source',\r\n    isEnabled: true,\r\n    type: 12\r\n};\r\nexport const demoSource: DataSourceDescription = {\r\n    title: 'CreateChartStrings.TXT.SourceTitleDemo',\r\n    desc: 'CreateChartStrings.TXT.SourceDescDemo',\r\n    imageUrl: '/Images/ux/dataSources/demochart.png',\r\n    isEnabled: true,\r\n    type: 8\r\n};\r\n\r\nexport interface ExternalSqlSourceViewModel {\r\n    ConnectionString: string;\r\n    SelectQuery: string;\r\n    PrimaryKeyColumn: string;\r\n    ParentColumn: string;\r\n    SearchQuery?: string;\r\n}\r\n\r\nexport interface CreateChartViewModel {\r\n    ChartName?: string;\r\n    IsPublic: boolean;\r\n    DataSourceType: number;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CreateRoutingModule } from './create-routing.module';\r\nimport { CreateChartComponent } from './components/create-chart.component';\r\nimport { L10nTranslationModule } from 'angular-l10n';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport * as fromCreate from './create.reducers';\r\nimport { SqlSourceComponent } from './components/sql-source.component';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { CreateEffects } from './create.effects';\r\nimport { CreateChartService } from './create-chart.service';\r\n\r\n@NgModule({\r\n    declarations: [CreateChartComponent, SqlSourceComponent],\r\n    imports: [\r\n        FormsModule,\r\n        L10nTranslationModule,\r\n        CommonModule,\r\n        CreateRoutingModule,\r\n        StoreModule.forFeature(fromCreate.featureKey, fromCreate.reducer),\r\n        EffectsModule.forFeature([CreateEffects])\r\n    ],\r\n    providers: [\r\n        CreateChartService\r\n    ]\r\n})\r\nexport class CreateModule { }\r\n","import { createFeatureSelector, createSelector, createReducer, Action, on } from '@ngrx/store';\r\n\r\nimport * as fromRoot from '../reducers';\r\nimport { LoadDataSourceSuccess, TestSqlConnection, TestSqlConnectionSuccess, TestSqlConnectionFailure, SaveSqlDataSourceSuccess, ResetSaveStatus, CreateChartSuccess, CreateChart, CreateChartFailure } from './create.actions';\r\nimport { ExternalSqlSourceViewModel } from './create.models';\r\nimport { ChartDescription } from '../shared/shared.models';\r\n\r\nexport const featureKey = 'create';\r\n\r\nexport interface CreateState {\r\n    dataSource: ExternalSqlSourceViewModel;\r\n    isTestingConnection: boolean;\r\n    hasConnectionTestFailed: boolean;\r\n    hasConnectionTestSucceeded: boolean;\r\n    saveSqlSourceSuccess: boolean;\r\n    createdChart: ChartDescription;\r\n    isCreating: boolean;\r\n}\r\n\r\nexport interface State extends fromRoot.State {\r\n    create: CreateState;\r\n}\r\n\r\nexport const initialState: CreateState = {\r\n    dataSource: null,\r\n    isTestingConnection: false,\r\n    hasConnectionTestFailed: false,\r\n    hasConnectionTestSucceeded: false,\r\n    saveSqlSourceSuccess: false,\r\n    createdChart: null,\r\n    isCreating: false\r\n};\r\n\r\nconst createChartReducer = createReducer(initialState,\r\n    on(LoadDataSourceSuccess, (state, action) => ({ ...state, dataSource: action.dataSource, hasConnectionTestFailed: false, hasConnectionTestSucceeded: false })),\r\n    on(TestSqlConnection, (state) => ({ ...state, isTestingConnection: true })),\r\n    on(TestSqlConnectionSuccess, (state) => ({ ...state, isTestingConnection: true, hasConnectionTestFailed: false, hasConnectionTestSucceeded: true })),\r\n    on(TestSqlConnectionFailure, (state) => ({ ...state, isTestingConnection: true, hasConnectionTestFailed: true, hasConnectionTestSucceeded: false })),\r\n    on(SaveSqlDataSourceSuccess, (state) => ({ ...state, saveSqlSourceSuccess: true })),\r\n    on(CreateChart, (state) => ({ ...state, isCreating: true })),\r\n    on(CreateChartSuccess, (state, action) => ({ ...state, createdChart: action })),\r\n    on(CreateChartFailure, (state) => ({ ...state, isCreating: false })),\r\n    on(ResetSaveStatus, (state) => ({ ...state, saveSqlSourceSuccess: false, createdChart: null, isCreating: false }))\r\n);\r\n\r\nexport function reducer(state: CreateState | undefined, action: Action) {\r\n    return createChartReducer(state, action);\r\n}\r\n\r\nexport const selectCreate = createFeatureSelector<State, CreateState>(featureKey);\r\n\r\nexport const selectIsTestingConnection = createSelector(selectCreate, state => state.isTestingConnection);\r\nexport const selectDataSource = createSelector(selectCreate, state => state.dataSource);\r\nexport const selectHasConnectionTestFailed = createSelector(selectCreate, state => state.hasConnectionTestFailed);\r\nexport const selectHasConnectionTestSucceeded = createSelector(selectCreate, state => state.hasConnectionTestSucceeded);\r\nexport const selectSaveSqlSourceSuccess = createSelector(selectCreate, s => s.saveSqlSourceSuccess);\r\nexport const selectCreatedChart = createSelector(selectCreate, s => s.createdChart);\r\nexport const selectIsCreating = createSelector(selectCreate, s => s.isCreating);\r\n"],"sourceRoot":"webpack:///"}